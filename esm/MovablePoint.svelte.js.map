{"version":3,"file":"MovablePoint.svelte.js","sources":["../src/MovablePoint.svelte"],"sourcesContent":["<script lang=\"ts\" context=\"module\">\n  const VEC2_0 = vec2.create();\n</script>\n\n<script lang=\"ts\">\n  import type { FullGestureState } from \"@use-gesture/vanilla\";\n  import { DragGesture } from \"@use-gesture/vanilla\";\n  import { mat2d, vec2 } from \"gl-matrix\";\n  import { onMount } from \"svelte\";\n  import { getScaleContext } from \"./math\";\n\n  export let point: vec2 = vec2.create();\n  export let color: string = \"var(--visual-math-blue)\";\n  export let transform: mat2d = mat2d.create();\n  export let constrain:\n    | \"horizontal\"\n    | \"vertical\"\n    | ((position: vec2) => vec2)\n    | undefined = undefined;\n\n  let intialPoint = vec2.fromValues(point[0], point[1]);\n  let constraintFunction = (point: vec2) => point;\n  $: if (constrain === \"horizontal\") {\n    constraintFunction = ([x, _y]) => [x, intialPoint[1]];\n  } else if (constrain === \"vertical\") {\n    constraintFunction = ([_x, y]) => [intialPoint[0], y];\n  } else if (typeof constrain === \"function\") {\n    constraintFunction = constrain;\n  }\n\n  point = constraintFunction(point);\n\n  let scaleContext = getScaleContext();\n  $: scaleX = $scaleContext.scaleX;\n  $: scaleY = $scaleContext.scaleY;\n  $: inversePixelMatrix = $scaleContext.inversePixelMatrix;\n  let display = vec2.create();\n  $: display = vec2.transformMat2d(display, point, transform);\n\n  let inverseTransform = mat2d.create();\n  $: inverseTransform = mat2d.invert(inverseTransform, transform);\n\n  let element: SVGGElement;\n  let startPoint = vec2.create();\n  let dragging = false;\n\n  $: onDrag = (\n    state: Omit<FullGestureState<\"drag\">, \"event\"> & {\n      event: PointerEvent | MouseEvent | TouchEvent | KeyboardEvent;\n    }\n  ) => {\n    state.event?.stopPropagation();\n    dragging = state.down;\n    const movement = vec2.transformMat2d(\n      VEC2_0,\n      state.movement,\n      inversePixelMatrix\n    );\n\n    if (state.first) {\n      startPoint = vec2.transformMat2d(startPoint, point, transform);\n    }\n    vec2.add(point, startPoint, movement);\n    vec2.transformMat2d(point, point, inverseTransform);\n    point = constraintFunction(point);\n  };\n\n  onMount(() => {\n    const dragGesture = new DragGesture(element, onDrag);\n\n    return () => {\n      dragGesture.destroy();\n    };\n  });\n</script>\n\n<g bind:this={element}>\n  <circle\n    cx={scaleX(display[0])}\n    cy={scaleY(display[1])}\n    r={30}\n    fill=\"transparent\"\n  />\n  <circle\n    cx={scaleX(display[0])}\n    cy={scaleY(display[1])}\n    r={6}\n    fill={color}\n    stroke={color}\n    stroke-opacity={0.25}\n    class:draggable={dragging}\n    tabIndex={0}\n  />\n</g>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;qDA8EQ,GAAM,gBAAC,GAAO,IAAC,CAAC;qDAChB,GAAM,gBAAC,GAAO,IAAC,CAAC;sBACjB,EAAE;;qDAID,GAAM,gBAAC,GAAO,IAAC,CAAC;qDAChB,GAAM,gBAAC,GAAO,IAAC,CAAC;sBACjB,CAAC;mCACE,GAAK;qCACH,GAAK;mCACG,IAAI;6BAEV,CAAC;mDADM,GAAQ;;;GAd7B,MAiBG;GAhBD,MAKC;GACD,MASC;;;;6FAdK,GAAM,gBAAC,GAAO,IAAC,CAAC;;;;6FAChB,GAAM,gBAAC,GAAO,IAAC,CAAC;;;;6FAKhB,GAAM,gBAAC,GAAO,IAAC,CAAC;;;;6FAChB,GAAM,gBAAC,GAAO,IAAC,CAAC;;;;;oCAEd,GAAK;;;;sCACH,GAAK;;;;oDAEI,GAAQ;;;;;;;;;;;;MAzF7B,MAAA,GAAA,IAAA,CAAA,MAAA;;;;;;;;OAUA,KAAA,GAAA,IAAA,CAAA,MAAA;OACA,KAAA,GAAA,yBAAA;OACA,SAAA,GAAA,KAAA,CAAA,MAAA;OACA,SAAA,GAAA,SAAA;KAMA,WAAA,GAAA,IAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA;KACA,kBAAA,GAAA,KAAA,IAAA,KAAA;CASA,KAAA,GAAA,kBAAA,CAAA,KAAA;KAEA,YAAA,GAAA,eAAA;;KAIA,OAAA,GAAA,IAAA,CAAA,MAAA;KAGA,gBAAA,GAAA,KAAA,CAAA,MAAA;KAGA,OAAA;KACA,UAAA,GAAA,IAAA,CAAA,MAAA;KACA,QAAA,GAAA,KAAA;;CAuBA,OAAA;QACA,WAAA,OAAA,WAAA,CAAA,OAAA,EAAA,MAAA;;;GAGA,WAAA,CAAA,OAAA;;;;;;GAKc,OAAO;;;;;;;;;;;;;;OAtDrB,SAAA,KAAA,YAAA;qBACA,kBAAA,KAAA,CAAA,EAAA,EAAA,OAAA,CAAA,EAAA,WAAA,CAAA,CAAA;cACA,SAAA,KAAA,UAAA;qBACA,kBAAA,KAAA,EAAA,EAAA,CAAA,OAAA,WAAA,CAAA,CAAA,GAAA,CAAA;qBACA,SAAA,KAAA,UAAA;qBACA,kBAAA,GAAA,SAAA;;;;;mBAMA,MAAA,GAAA,aAAA,CAAA,MAAA;;;;mBACA,MAAA,GAAA,aAAA,CAAA,MAAA;;;;oBACA,kBAAA,GAAA,aAAA,CAAA,kBAAA;;;;oBAKA,gBAAA,GAAA,KAAA,CAAA,MAAA,CAAA,gBAAA,EAAA,SAAA;;;;GAMA,MAAA,GAAA,KAAA;;;KAKA,EAAA,GAAA,KAAA,CAAA,KAAA,MAAA,IAAA,IAAA,EAAA,UAAA,CAAA;WAAA,CAAA;MAAA,EAAA,CAAA,eAAA;;oBACA,QAAA,GAAA,KAAA,CAAA,IAAA;UACA,QAAA,GAAA,IAAA,CAAA,cAAA,CAAA,MAAA,EAAA,KAAA,CAAA,QAAA,EAAA,kBAAA;;QAMA,KAAA,CAAA,KAAA;sBACA,UAAA,GAAA,IAAA,CAAA,cAAA,CAAA,UAAA,EAAA,KAAA,EAAA,SAAA;;;IAEA,IAAA,CAAA,GAAA,CAAA,KAAA,EAAA,UAAA,EAAA,QAAA;IACA,IAAA,CAAA,cAAA,CAAA,KAAA,EAAA,KAAA,EAAA,gBAAA;oBACA,KAAA,GAAA,kBAAA,CAAA,KAAA;;;;;mBA3BA,OAAA,GAAA,IAAA,CAAA,cAAA,CAAA,OAAA,EAAA,KAAA,EAAA,SAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}